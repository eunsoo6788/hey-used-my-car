version: '3'
services:
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  redis-ui:
    image: patrikx3/p3x-redis-ui:latest
    restart: always
    container_name: p3x-redis-ui
    ports:
      - "7843:7843"
    volumes:
      - ./settings:/settings

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306"   # MySQL 기본 포트
    environment:
      MYSQL_ROOT_PASSWORD: root  # MySQL root 사용자 비밀번호
      MYSQL_DATABASE: board_db   # 기본 생성될 데이터베이스 이름
    volumes:
      - ./mysql-data:/var/lib/mysql   # MySQL 데이터 저장소 마운트

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
